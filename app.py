from flask import Flask, jsonify, request
from db import get_url_info, add_url

app = Flask(__name__)


# This is the API key that clients must include in their requests.
# In a real implementation, the API key would be stored in a secure
# way and checked against a list of authorized keys.
API_KEY= "abc123"

# This is a sample database of malware URLs. In a real implementation,
# this would be a more comprehensive database and could be stored in a
# more robust way (e.g., in a database server).
url_db = {
    "abc.com": {
        "type": "Trojan",
        "date_added": "2022-01-01"
    },
    "xyz.com": {
        "type": "Ransomware",
        "date_added": "2022-02-01"
    }
}


@app.route('/')
def index():
    return '<h1>Malware URL lookup web service</h1>'

@app.route('/v1/urlinfo/<path:url>', methods=["GET"])
def link_info(url):
    if "api_key" not in request.args:
        return jsonify({"error": "API Key missing"}), 401
    elif request.args["api_key"] != API_KEY:
        return jsonify({"error": "Unauthorized"}), 401
    
    # Check if the requested URL is in the database of malware URLs.
    resp = db_call(url)

    if resp:
        return jsonify({
            "safe": False,
            "details": url_db[url]
        })
    else:
        return jsonify({"safe": True})

def db_call(url):
    resp= get_url_info(url)
    return resp






##SQL LITE connection

